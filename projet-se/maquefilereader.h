/** \file
 * maquefilereader.h : header pour la lecture des maquefiles
 * \copyright Vincent Loechner, 2014.
 */

/** taille maximale d'un nom de cible dans un maquefile (nombre de
 *  caractères)
 */
#define MAXCIBLE 64

/* prédéclaration */
struct noeud;

/**
 * liste de pointeurs sur des noeuds (liste chaînée terminée par NULL)
 */
struct liste
{
	struct liste *suiv;   /**< suivant */
	struct noeud *n;      /**< noeud */
};

typedef struct liste Liste;

/**
 * le graphe de dépendances est une liste de tous les noeuds (toutes les
 * cibles et dépendances présentes dans le maquefile)
 */
typedef Liste Graphe;

/**
 * chaque noeud du graphe de dépendances a une structure de ce type
 * associée
 */
struct noeud
{
	Liste *succ;          /**< liste des noeuds dépendant de celui-ci */
	Liste *pred;          /**< liste des noeuds dont celui-ci dépend */
	char nom[MAXCIBLE];   /**< nom de la cible du maquefile */
	char **commandes;     /**< tableau contenant la liste des commandes
		* (chaines de caractères) à exécuter, terminé par NULL.
		* Ce pointeur vaut NULL s'il n'y a pas de règle ayant cette
		* cible (il doit s'agir d'un fichier dans ce cas) */
	int flag;             /**< ce flag peut être utilisé pour marquer
		* des règles (initialisé à 0) */
};

/**
 * évite de taper struct à chaque fois
 */
typedef struct noeud Noeud;

/* ************ fonctions ******************************************* */

extern Graphe *LireMaquefile( char *fname );
extern void AfficheGraphe( Graphe *g );
extern void FreeListe( Liste *l );
extern void FreeGraphe( Graphe *g );
extern Noeud *TrouveNoeud( Graphe *g, char *cible );

